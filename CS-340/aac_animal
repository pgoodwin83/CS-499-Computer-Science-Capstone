from pymongo import MongoClient
from bson.objectid import ObjectId

class AnimalShelter(object):
    """ CRUD operations for Animal collection in MongoDB """

def __init__(self, username, password):
# Initializing the MongoClient. This helps to 
# access the MongoDB databases and collections. 
self.client = MongoClient('mongodb://%s:%s@localhost:53010' % (username, password))
    self.database = self.client['AAC']

# Complete this create method to implement the C in CRUD.
    def create(self, data):
        if data is not None:
            self.database.animals.insert(data)  # data should be dictionary            
        else:
            raise Exception("Nothing to save, because data parameter is empty")

# Create method to implement the R in CRUD.
    def read(self, data):
        if data is not None:
            self.database.animals.find(data)  # data should be dictionary            
        else:
            raise Exception("Nothing to read, because data parameter is empty")
            
# Complete this create method to implement the U in CRUD.
    def update(self, data, newData):
        if data is not None:
            self.database.animals.update(data, {'$set' : newData})  # data should be dictionary            
        else:
            raise Exception("Nothing to update, because data parameter is empty")

# Create method to implement the D in CRUD.
    def delete(self, data):
        if data is not None:
            self.database.animals.delete(data)  # data should be dictionary            
        else:
            raise Exception("Nothing to delete, because data parameter is empty")
